import random
import time


class Dog:

    def __init__(self):
        self.name = "orel"
        self.age = 7

    def birthday(self):
        self.age += 1

    def get_age(self):
        return self.age


class CrazyPlane:
    def __init__(self, x=0, y=0, name="default"):
        self.x = x
        self.y = y
        self.name = name

    def update_pos(self):
        if self.x >= 9:
            self.x-=1
        elif self.x <= -9:
            self.x +=1
        else:
            self.x = self.x + random.randint(-1, 1)

        if self.y >= 9:
            self.y -= 1
        elif self.y <= -9:
            self.y +=1
        else:
            self.y = self.y + random.randint(-1, 1)



    def get_position(self):
        return self.x, self.y

    def turn(self,plane2):
        best_dis = 0
        save_x = self.x
        save_y = self.y
        best_y = 0
        best_x = 0
        possabiltys_x = [1, -2, 1, 0, 1, -2, 0, 2]
        possabiltys_y = [0, 0, 1, -2, 2, 0, -2, 0]

        for i in range(8):
            before_dis = self.distance(plane2)
            self.x += possabiltys_x[i]
            self.y += possabiltys_y[i]
            if self.distance(plane2) > before_dis:
                if best_dis < self.distance(plane2):
                    best_x = possabiltys_x[i]
                    best_y = possabiltys_y[i]
                    best_dis = self.distance(plane2)
        self.x = save_x + best_x
        self.y = save_y + best_y

    def avoid_colision(self,plane2):
        if self.distance(plane2) <= 2:
            print(f"almost-crasheddddddd ,distance was {self.distance(plane2)} saved!")
            self.turn(plane2)
            print(f"distance now {self.distance(plane2)}")

    def flying(self):
        print(f"{self} at: ")
        self.update_pos()
        x, y = self.get_position()
        print(x, y)
        time.sleep(1)

    def distance(self, plane2):
        return ((self.y - plane2.y) **2 + (self.x - plane2.x) **2) **0.5


    def __str__(self):
        return self.name





